" PLUGINS {{{1
" Auto install vim-plug
let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/bundle')
" Get help for vim-plug
Plug 'junegunn/vim-plug'

" Colorscheme
Plug 'morhetz/gruvbox'

" tpope my beloved
Plug 'tpope/vim-fugitive'
Plug 'tpope/vim-surround'
Plug 'tpope/vim-commentary'
Plug 'tpope/vim-vinegar'
Plug 'tpope/vim-repeat'

" Make html usable
Plug 'mattn/emmet-vim'
call plug#end()

let g:gruvbox_italic=1
let g:user_emmet_install_global=0
autocmd Filetype html,css EmmetInstall
" }}}
" OPTIONS {{{1
filetype plugin on
syntax enable
set background=dark
colorscheme gruvbox

if has('termguicolors')
	set termguicolors
	" Allow xterm compatibility
	let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
	let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
end

set number
set relativenumber
set ruler
set cmdheight=2
set laststatus=2

set ttyfast
set lazyredraw
set showmatch
set matchtime=2

set noerrorbells
set novisualbell

set autoindent
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab

set ignorecase
set smartcase
set hlsearch
set incsearch

set encoding=utf8
set clipboard+=unnamedplus
set hidden
set nobackup
set noswapfile
set undofile
set undodir=~/.vim/undodir/
set splitbelow
set splitright
set foldmethod=marker
" }}}
" MAPPINGS {{{1
let mapleader=','

set pastetoggle=<F10>

" Fast search & replace
nnoremap <leader>s :%s//g

" Make Y work like it should
nnoremap Y y$

" Fast save
nnoremap <leader>w :w<cr>

" Smart way to move between windows
noremap <C-j> <C-W>j
noremap <C-k> <C-W>k
noremap <C-h> <C-W>h
noremap <C-l> <C-W>l
" }}}
